env HOME=$WORK/home

benchinit -r -benchtime=10x .
stdout '^BenchmarkInit'
! stdout ' -[0-9].*/op' # initialising "time" again can lead to negative durations

-- go.mod --
module test.tld/foo
-- import.go --
package foo

import (
	// these can cause issues.
	_ "runtime"
	_ "testing"
	"os/signal"
	"flag"

	// these surprisingly don't. perhaps we need more code below.
	_ "unsafe"
	"os"
	"sync"
	_ "sync/atomic"
	_ "errors"
	_ "io"
	_ "runtime/debug"
	_ "runtime/pprof"
	_ "runtime/trace"
	_ "time"
	_ "syscall"
	_ "fmt"
)

var (
	fooOnce sync.Once
	foo     bool

	sign = make(chan os.Signal, 1)

	flagSet flag.FlagSet
)

func init() {
	fooOnce.Do(func() { foo = true })

	signal.Notify(sign, os.Interrupt)

	var b bool
	flagSet.BoolVar(&b, "i", false, "")
}
